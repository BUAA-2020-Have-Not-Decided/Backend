package cn.edu.buaa.scholarshipserver.models;

import java.util.ArrayList;
import java.util.List;

public class InstitutionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Institution
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Institution
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Institution
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Institution
     *
     * @mbggenerated
     */
    public InstitutionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Institution
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Institution
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Institution
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Institution
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Institution
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Institution
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Institution
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Institution
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Institution
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Institution
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Institution
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andInstitutionidIsNull() {
            addCriterion("InstitutionId is null");
            return (Criteria) this;
        }

        public Criteria andInstitutionidIsNotNull() {
            addCriterion("InstitutionId is not null");
            return (Criteria) this;
        }

        public Criteria andInstitutionidEqualTo(Integer value) {
            addCriterion("InstitutionId =", value, "institutionid");
            return (Criteria) this;
        }

        public Criteria andInstitutionidNotEqualTo(Integer value) {
            addCriterion("InstitutionId <>", value, "institutionid");
            return (Criteria) this;
        }

        public Criteria andInstitutionidGreaterThan(Integer value) {
            addCriterion("InstitutionId >", value, "institutionid");
            return (Criteria) this;
        }

        public Criteria andInstitutionidGreaterThanOrEqualTo(Integer value) {
            addCriterion("InstitutionId >=", value, "institutionid");
            return (Criteria) this;
        }

        public Criteria andInstitutionidLessThan(Integer value) {
            addCriterion("InstitutionId <", value, "institutionid");
            return (Criteria) this;
        }

        public Criteria andInstitutionidLessThanOrEqualTo(Integer value) {
            addCriterion("InstitutionId <=", value, "institutionid");
            return (Criteria) this;
        }

        public Criteria andInstitutionidIn(List<Integer> values) {
            addCriterion("InstitutionId in", values, "institutionid");
            return (Criteria) this;
        }

        public Criteria andInstitutionidNotIn(List<Integer> values) {
            addCriterion("InstitutionId not in", values, "institutionid");
            return (Criteria) this;
        }

        public Criteria andInstitutionidBetween(Integer value1, Integer value2) {
            addCriterion("InstitutionId between", value1, value2, "institutionid");
            return (Criteria) this;
        }

        public Criteria andInstitutionidNotBetween(Integer value1, Integer value2) {
            addCriterion("InstitutionId not between", value1, value2, "institutionid");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameIsNull() {
            addCriterion("InstitutionName is null");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameIsNotNull() {
            addCriterion("InstitutionName is not null");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameEqualTo(String value) {
            addCriterion("InstitutionName =", value, "institutionname");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameNotEqualTo(String value) {
            addCriterion("InstitutionName <>", value, "institutionname");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameGreaterThan(String value) {
            addCriterion("InstitutionName >", value, "institutionname");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameGreaterThanOrEqualTo(String value) {
            addCriterion("InstitutionName >=", value, "institutionname");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameLessThan(String value) {
            addCriterion("InstitutionName <", value, "institutionname");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameLessThanOrEqualTo(String value) {
            addCriterion("InstitutionName <=", value, "institutionname");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameLike(String value) {
            addCriterion("InstitutionName like", value, "institutionname");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameNotLike(String value) {
            addCriterion("InstitutionName not like", value, "institutionname");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameIn(List<String> values) {
            addCriterion("InstitutionName in", values, "institutionname");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameNotIn(List<String> values) {
            addCriterion("InstitutionName not in", values, "institutionname");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameBetween(String value1, String value2) {
            addCriterion("InstitutionName between", value1, value2, "institutionname");
            return (Criteria) this;
        }

        public Criteria andInstitutionnameNotBetween(String value1, String value2) {
            addCriterion("InstitutionName not between", value1, value2, "institutionname");
            return (Criteria) this;
        }

        public Criteria andNatureindexIsNull() {
            addCriterion("NatureIndex is null");
            return (Criteria) this;
        }

        public Criteria andNatureindexIsNotNull() {
            addCriterion("NatureIndex is not null");
            return (Criteria) this;
        }

        public Criteria andNatureindexEqualTo(Float value) {
            addCriterion("NatureIndex =", value, "natureindex");
            return (Criteria) this;
        }

        public Criteria andNatureindexNotEqualTo(Float value) {
            addCriterion("NatureIndex <>", value, "natureindex");
            return (Criteria) this;
        }

        public Criteria andNatureindexGreaterThan(Float value) {
            addCriterion("NatureIndex >", value, "natureindex");
            return (Criteria) this;
        }

        public Criteria andNatureindexGreaterThanOrEqualTo(Float value) {
            addCriterion("NatureIndex >=", value, "natureindex");
            return (Criteria) this;
        }

        public Criteria andNatureindexLessThan(Float value) {
            addCriterion("NatureIndex <", value, "natureindex");
            return (Criteria) this;
        }

        public Criteria andNatureindexLessThanOrEqualTo(Float value) {
            addCriterion("NatureIndex <=", value, "natureindex");
            return (Criteria) this;
        }

        public Criteria andNatureindexIn(List<Float> values) {
            addCriterion("NatureIndex in", values, "natureindex");
            return (Criteria) this;
        }

        public Criteria andNatureindexNotIn(List<Float> values) {
            addCriterion("NatureIndex not in", values, "natureindex");
            return (Criteria) this;
        }

        public Criteria andNatureindexBetween(Float value1, Float value2) {
            addCriterion("NatureIndex between", value1, value2, "natureindex");
            return (Criteria) this;
        }

        public Criteria andNatureindexNotBetween(Float value1, Float value2) {
            addCriterion("NatureIndex not between", value1, value2, "natureindex");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Institution
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Institution
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}